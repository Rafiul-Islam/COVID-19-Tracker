[{"D:\\React\\Projects\\covid-19-tracker\\src\\index.js":"1","D:\\React\\Projects\\covid-19-tracker\\src\\App.js":"2","D:\\React\\Projects\\covid-19-tracker\\src\\reportWebVitals.js":"3","D:\\React\\Projects\\covid-19-tracker\\src\\InfoBox.js":"4","D:\\React\\Projects\\covid-19-tracker\\src\\Map.js":"5"},{"size":562,"mtime":1608142093497,"results":"6","hashOfConfig":"7"},{"size":3377,"mtime":1608153930686,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607778838987,"results":"9","hashOfConfig":"7"},{"size":582,"mtime":1608150377171,"results":"10","hashOfConfig":"7"},{"size":180,"mtime":1608150626958,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"dhm000",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\Projects\\covid-19-tracker\\src\\index.js",[],["23","24"],"D:\\React\\Projects\\covid-19-tracker\\src\\App.js",["25","26"],"D:\\React\\Projects\\covid-19-tracker\\src\\reportWebVitals.js",[],"D:\\React\\Projects\\covid-19-tracker\\src\\InfoBox.js",[],"D:\\React\\Projects\\covid-19-tracker\\src\\Map.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":22,"nodeType":"33","messageId":"34","endLine":2,"endColumn":32},{"ruleId":"35","severity":1,"message":"36","line":14,"column":15,"nodeType":"37","endLine":17,"endColumn":6},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]